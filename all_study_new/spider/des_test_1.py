
import Crypto.cipher.des3
import base64
import binascii


def auto_fill(x):
  return x.encode()


key = "asd"
content = "abcdefg1234567"
x = crypto.cipher.des3.new(auto_fill(key), crypto.cipher.des3.mode_ecb)
a = base64.encodebytes(x.encrypt(auto_fill(content)))
print(a)
b = x.decrypt(base64.decodebytes(a))
print(b)
a = binascii.b2a_base64(x.encrypt(auto_fill(content)))
b = x.decrypt(binascii.a2b_base64(a))
print(a)
print(b)

data = ""

print(des_descrypt(data))

# from pyDes import des, ECB, PAD_PKCS5
# import base64
#
# DES_SECRET_KEY = '12345678'
# s = "zhanglei"
# des_obj = des(DES_SECRET_KEY, ECB, DES_SECRET_KEY, padmode=PAD_PKCS5)
# des_bytes = des_obj.encrypt(s.encode('utf-8'))
# base64_result = str(base64.b64encode(des_bytes), encoding = 'utf-8')
# print(base64_result)
# hex_result = des_bytes.hex()
# print(hex_result)
